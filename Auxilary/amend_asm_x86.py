import argparse

delete_starting_with = "INCLUDELIB"
delete_containing = "listing.inc"
string_to_add = "assume fs:nothing"
add_after = "\t.model\tflat"


def process_file(input_file, output_file):
    print(f"Amending assembly file: {input_file}")

    with open(input_file, "r") as infile, open(output_file, "w") as outfile:
        outfile.write(
            "; This file is a result of manipulation of the assembly listing autogenerated by cl.exe.\n"
        )

        for line in infile:
            # Skip lines starting with "INCLUDELIB"
            if line.startswith(delete_starting_with):
                print(f"Removed line: {line.strip()}")
                continue

            # Replace include listing.inc with assume fs:nothing
            if delete_containing in line.strip():
                print(f"Removed line: {line.strip()}")
                continue

            if line.startswith(add_after):
                outfile.write(line)
                outfile.write("\n")
                outfile.write(string_to_add)

                print(f"Added line: {string_to_add.strip()}")
                continue

            outfile.write(line)

    print("Done")


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("file_in", help="Path to the autogenerated asm file")
    parser.add_argument("file_out", help="Path to the amended asm file")
    args = parser.parse_args()

    process_file(args.file_in, args.file_out)


if __name__ == "__main__":
    main()
